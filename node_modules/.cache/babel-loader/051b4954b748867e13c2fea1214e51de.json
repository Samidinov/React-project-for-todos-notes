{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/application1/src/components/app/app.js\";\nimport React from 'react';\nimport AppHeader from '../app-header/app-hearder';\nimport SearchPanel from '../search-panel/search-panel';\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\nimport PostList from '../post-list/post-list';\nimport PostAddForm from '../post-add-form/post-add-form'; //import css files\n\nimport './app.css';\nimport '../post-add-form/post-add-form.css';\nimport '../post-list/post-list.css';\nimport '../post-list-item/post-list-item.css';\nimport '../post-status-filter/post-status-filter.css';\nimport '../search-panel/search-panel.css';\nimport '../app-header/app-header.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppBlock = styled.div`\n        margin: 0 auto;\n        max-width: 800px;\n`;\n_c = AppBlock;\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteItem = id => {\n      this.setState(({\n        data\n      }) => {\n        const index = data.findIndex(elem => elem.id === id);\n        const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n        return {\n          data: newArr\n        };\n      });\n    };\n\n    this.addItem = body => {\n      if (body.trim()) {\n        const newItem = {\n          label: body,\n          important: false,\n          like: false,\n          id: Date.now()\n        };\n        this.setState(({\n          data\n        }) => {\n          const newArr = [...data, newItem];\n          return {\n            data: newArr\n          };\n        });\n      }\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        data\n      }) => {\n        const index = data.findIndex(elem => elem.id === id);\n        const old = data[index];\n        const newItem = { ...old,\n          important: !old.important\n        };\n        const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n        return {\n          data: newArr\n        };\n      });\n    };\n\n    this.onToggleLiked = id => {\n      this.setState(({\n        data\n      }) => {\n        const index = data.findIndex(elem => elem.id === id);\n        const old = data[index];\n        const newItem = { ...old,\n          like: !old.like\n        };\n        const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n        return {\n          data: newArr\n        };\n      });\n    };\n\n    this.onUpdateSearch = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onFilterSelect = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.state = {\n      data: [{\n        label: \"Going to market\",\n        important: false,\n        like: true,\n        id: 'alkd'\n      }, {\n        label: \"Learn Js\",\n        important: true,\n        like: false,\n        id: 'aiekd'\n      }, {\n        label: \"Lear React tutorial\",\n        important: false,\n        like: false,\n        id: 'alkdiiek'\n      }],\n      term: '',\n      filter: 'all'\n    };\n  }\n\n  filterPost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else return items;\n  }\n\n  serchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = this.state.data.filter(elem => elem.like).length;\n    const important = this.state.data.filter(elem => elem.important).length;\n    const allPosts = this.state.data.length;\n    const visiblePosts = this.filterPost(this.serchPost(data, term), filter);\n    return /*#__PURE__*/_jsxDEV(AppBlock, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        liked: liked,\n        allPosts: allPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onUpdateSearch: this.onUpdateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {\n          filter: filter,\n          onFilterSelect: filter => this.onFilterSelect(filter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        props: visiblePosts,\n        onDelete: id => this.deleteItem(id),\n        onToggleImportant: id => this.onToggleImportant(id),\n        onToggleLiked: id => this.onToggleLiked(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n        onAdd: body => this.addItem(body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBlock\");","map":{"version":3,"sources":["/home/ds/Desktop/react/application1/src/components/app/app.js"],"names":["React","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","styled","AppBlock","div","App","Component","constructor","props","deleteItem","id","setState","data","index","findIndex","elem","newArr","slice","addItem","body","trim","newItem","label","important","like","Date","now","onToggleImportant","old","onToggleLiked","onUpdateSearch","term","onFilterSelect","filter","state","filterPost","items","item","serchPost","length","indexOf","render","liked","allPosts","visiblePosts"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AppHeader from '../app-header/app-hearder'\nimport SearchPanel from '../search-panel/search-panel'\nimport PostStatusFilter from '../post-status-filter/post-status-filter'\nimport PostList from '../post-list/post-list'\nimport PostAddForm from '../post-add-form/post-add-form' \n\n//import css files\nimport './app.css'\nimport '../post-add-form/post-add-form.css'\nimport '../post-list/post-list.css'\nimport '../post-list-item/post-list-item.css'\nimport '../post-status-filter/post-status-filter.css'\nimport '../search-panel/search-panel.css'\nimport '../app-header/app-header.css'\nimport styled from 'styled-components'\n\nconst AppBlock = styled.div`\n        margin: 0 auto;\n        max-width: 800px;\n`\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data : [\n                {label:\"Going to market\", important:false, like:true, id:'alkd'},\n                {label:\"Learn Js\", important:true, like:false, id:'aiekd'},\n                {label:\"Lear React tutorial\", important:false, like:false, id:'alkdiiek'}\n            ],\n            term:'',\n            filter: 'all'\n        }\n    }\n    deleteItem = (id) => {\n        this.setState( ({data}) => {\n            const index = data.findIndex(elem => elem.id ===id);\n\n            const newArr = [...data.slice(0, index), ...data.slice(index+1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n    \n    addItem = (body) => {\n       if(body.trim()) {\n        const newItem = {\n            label: body,\n            important: false,\n            like: false,\n            id: Date.now()\n        }\n        this.setState( ({data}) => {\n            const newArr = [...data, newItem];\n\n            return {\n                data: newArr\n            }\n        });\n       }\n    }\n\n    onToggleImportant = (id) => {\n        this.setState( ({data}) => {\n            const index = data.findIndex(elem => elem.id ===id);\n            \n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\n\n            return{\n                data: newArr\n            }\n        })\n    }\n\n    onToggleLiked = (id) => {\n        this.setState( ({data}) => {\n            const index = data.findIndex(elem => elem.id ===id);\n            \n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\n\n            return{\n                data: newArr\n            }\n        })\n    }\n\n    filterPost(items, filter) {\n        if(filter === 'like') {\n            return items.filter(item=> item.like)\n        }else return items;\n    }\n\n    serchPost(items, term) {\n        if(term.length === 0) {\n            return items\n        }\n        return items.filter( (item) => {\n            return item.label.indexOf(term) > -1\n        })\n    }\n\n    onUpdateSearch = (term) => {\n        this.setState({term})\n    }\n    onFilterSelect = (filter) => {\n        this.setState({filter});\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n        const liked = this.state.data.filter(elem=> elem.like).length;\n        const important = this.state.data.filter(elem=> elem.important).length;\n        const allPosts = this.state.data.length;\n\n        const visiblePosts = this.filterPost(this.serchPost(data, term), filter);\n        return (\n            <AppBlock>\n                <AppHeader\n                    liked={liked}\n                    allPosts={allPosts}>\n                </AppHeader>\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onUpdateSearch = {this.onUpdateSearch}\n                    ></SearchPanel>\n                    <PostStatusFilter\n                    filter={filter}\n                    onFilterSelect = {(filter) => this.onFilterSelect(filter)}\n                    >\n\n                    </PostStatusFilter>\n                </div>\n                <PostList \n                    props={visiblePosts}\n                    onDelete={(id) => this.deleteItem(id)}\n                    onToggleImportant = {(id) => this.onToggleImportant(id)}\n                    onToggleLiked = {(id) => this.onToggleLiked(id)}\n                >\n            \n                </PostList>\n                <PostAddForm onAdd = {(body) => this.addItem(body)}></PostAddForm>\n            </AppBlock>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}